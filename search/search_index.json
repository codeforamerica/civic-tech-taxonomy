{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome \u00b6 The Civic Tech Taxonomy is a community-maintained set of records defining standard tags for categorizing civic technology projects across different databases and organizations. Through synonyms that can be defined within each record for a standard tag, the taxonomy also functions as a map between terms commonly used organically and their standard equivalent. Source of truth \u00b6 The codeforamerica/civic-tech-taxonomy repository on GitHub is the official source of truth for the standard taxonomy. Contributing \u00b6 Contributions to the taxonomy should be suggested via pull request, reviewed by a volunteer maintainer, and then merged into the master branch upon acceptance. Format \u00b6 Tags defined within the repository are stored in the gitsheets format , and can be read with any TOML parser or higher-level gitsheets interface.","title":"Welcome"},{"location":"#welcome","text":"The Civic Tech Taxonomy is a community-maintained set of records defining standard tags for categorizing civic technology projects across different databases and organizations. Through synonyms that can be defined within each record for a standard tag, the taxonomy also functions as a map between terms commonly used organically and their standard equivalent.","title":"Welcome"},{"location":"#source-of-truth","text":"The codeforamerica/civic-tech-taxonomy repository on GitHub is the official source of truth for the standard taxonomy.","title":"Source of truth"},{"location":"#contributing","text":"Contributions to the taxonomy should be suggested via pull request, reviewed by a volunteer maintainer, and then merged into the master branch upon acceptance.","title":"Contributing"},{"location":"#format","text":"Tags defined within the repository are stored in the gitsheets format , and can be read with any TOML parser or higher-level gitsheets interface.","title":"Format"},{"location":"getting-started/cli/","text":"Command line \u00b6 This guide introduces working with taxonomy data from your command line Install gitsheets \u00b6 The git sheet command can be installed to your system via NPM: npm install -g gitsheets Reading to a spreadsheet \u00b6 git sheet query issues --format = csv > /tmp/issues.csv Reading to a JSON file \u00b6 git sheet query issues > /tmp/issues.json Formatting with jq \u00b6 git sheet query issues | jq Extract a list of IDs \u00b6 git sheet query issues | jq -r '.[].id' Get display name for a given ID \u00b6 tag = \"covid-19\" display_name = $( git sheet query issues --filter.id = \" ${ tag } \" | jq -r '.[].display_name' ) echo \" ${ tag } => ${ display_name } \"","title":"Command line"},{"location":"getting-started/cli/#command-line","text":"This guide introduces working with taxonomy data from your command line","title":"Command line"},{"location":"getting-started/cli/#install-gitsheets","text":"The git sheet command can be installed to your system via NPM: npm install -g gitsheets","title":"Install gitsheets"},{"location":"getting-started/cli/#reading-to-a-spreadsheet","text":"git sheet query issues --format = csv > /tmp/issues.csv","title":"Reading to a spreadsheet"},{"location":"getting-started/cli/#reading-to-a-json-file","text":"git sheet query issues > /tmp/issues.json","title":"Reading to a JSON file"},{"location":"getting-started/cli/#formatting-with-jq","text":"git sheet query issues | jq","title":"Formatting with jq"},{"location":"getting-started/cli/#extract-a-list-of-ids","text":"git sheet query issues | jq -r '.[].id'","title":"Extract a list of IDs"},{"location":"getting-started/cli/#get-display-name-for-a-given-id","text":"tag = \"covid-19\" display_name = $( git sheet query issues --filter.id = \" ${ tag } \" | jq -r '.[].display_name' ) echo \" ${ tag } => ${ display_name } \"","title":"Get display name for a given ID"},{"location":"maintenance/bulk-editing/","text":"Bulk Editing \u00b6 Dynamically with JavaScript \u00b6 Open an interactive node shell: cd ~/Repositories/civic-tech-taxonomy npm install node And paste a script to transform records: ( async () => { const Repository = require ( 'gitsheets/lib/Repository' ) const repo = await Repository . getFromEnvironment ({ working : true }) // open sheets const sheets = await repo . openSheets () console . log ( `loaded sheets: ${ Object . keys ( sheets ). join ( ', ' ) } ` ) // process each sheet for ( const sheetName in sheets ) { console . log ( `processing ${ sheetName } sheet` ) const sheet = sheets [ sheetName ] // process each record for await ( const tag of sheet . query ()) { tag . upper_name = ( tag . display_name || tag . id ). toUpperCase () // upsert modified record to save await sheet . upsert ( tag ) } } // write changes to working tree console . log ( 'writing to working tree...' ) const workspace = await repo . getWorkspace () await workspace . writeWorkingChanges () console . log ( 'done' ) })() Via shell scripting \u00b6 With the gitsheets CLI set up , you can use shell commands like find and jq to make bulk changes to the taxonomy: find issues skills statuses technologies -name '*.toml' | while read record_path ; do record_id = $( basename \" ${ record_path } \" .toml ) record_sheet = $( dirname \" ${ record_path } \" ) echo \"Initializing id= ${ record_id } for ${ record_path } in ${ record_sheet } \" git sheet read \" ${ record_path } \" \\ | jq \".id = \\\" ${ record_id } \\\"\" \\ | git sheet upsert \" ${ record_sheet } \" done","title":"Bulk Editing"},{"location":"maintenance/bulk-editing/#bulk-editing","text":"","title":"Bulk Editing"},{"location":"maintenance/bulk-editing/#dynamically-with-javascript","text":"Open an interactive node shell: cd ~/Repositories/civic-tech-taxonomy npm install node And paste a script to transform records: ( async () => { const Repository = require ( 'gitsheets/lib/Repository' ) const repo = await Repository . getFromEnvironment ({ working : true }) // open sheets const sheets = await repo . openSheets () console . log ( `loaded sheets: ${ Object . keys ( sheets ). join ( ', ' ) } ` ) // process each sheet for ( const sheetName in sheets ) { console . log ( `processing ${ sheetName } sheet` ) const sheet = sheets [ sheetName ] // process each record for await ( const tag of sheet . query ()) { tag . upper_name = ( tag . display_name || tag . id ). toUpperCase () // upsert modified record to save await sheet . upsert ( tag ) } } // write changes to working tree console . log ( 'writing to working tree...' ) const workspace = await repo . getWorkspace () await workspace . writeWorkingChanges () console . log ( 'done' ) })()","title":"Dynamically with JavaScript"},{"location":"maintenance/bulk-editing/#via-shell-scripting","text":"With the gitsheets CLI set up , you can use shell commands like find and jq to make bulk changes to the taxonomy: find issues skills statuses technologies -name '*.toml' | while read record_path ; do record_id = $( basename \" ${ record_path } \" .toml ) record_sheet = $( dirname \" ${ record_path } \" ) echo \"Initializing id= ${ record_id } for ${ record_path } in ${ record_sheet } \" git sheet read \" ${ record_path } \" \\ | jq \".id = \\\" ${ record_id } \\\"\" \\ | git sheet upsert \" ${ record_sheet } \" done","title":"Via shell scripting"},{"location":"maintenance/commands/import-all/","text":"import-all \u00b6 Updates snapshots of tracked external taxonomies stored in secondary branches Usage \u00b6 Ensure local copies of all branches match current remote version: git fetch origin '+refs/heads/sites/*:refs/heads/sites/*' Run all-sites importer: script/import-all Push all updates: git push origin 'refs/heads/sites/*:refs/heads/sites/*'","title":"import-all"},{"location":"maintenance/commands/import-all/#import-all","text":"Updates snapshots of tracked external taxonomies stored in secondary branches","title":"import-all"},{"location":"maintenance/commands/import-all/#usage","text":"Ensure local copies of all branches match current remote version: git fetch origin '+refs/heads/sites/*:refs/heads/sites/*' Run all-sites importer: script/import-all Push all updates: git push origin 'refs/heads/sites/*:refs/heads/sites/*'","title":"Usage"},{"location":"maintenance/commands/normalize/","text":"normalize \u00b6 Scans through all records and ensure files use standardized format Usage \u00b6 script/normalize","title":"normalize"},{"location":"maintenance/commands/normalize/#normalize","text":"Scans through all records and ensure files use standardized format","title":"normalize"},{"location":"maintenance/commands/normalize/#usage","text":"script/normalize","title":"Usage"}]}